import java.util.*;

import java.util.Collections;

public class Solution{

 public static int[][] pairSum(int[] arr, int s) {

       // Write your code here.

       List<int[]> ans = new ArrayList<>();

       HashMap<Integer,Integer> map = new HashMap<>();

       for(int i = 0 ; i < arr.length ; i++){

           int diff = s - arr[i];

           if(map.containsKey(diff)){

               int value = map.get(diff);

               int[] pairs = new int[2];

               if(arr[i] > diff){

                   pairs[0] =diff;

                   pairs[1] =arr[i];

               }else{

                   pairs[0] =arr[i];

                   pairs[1] =diff;

               }

               if(value > 1){

                      while(value != 0){

                          ans.add(pairs);

                          value--;

                      }

               }else{

                   ans.add(pairs);

               }

           }

           int vals = 0 ;

           if(map.containsKey(arr[i])) vals = map.get(arr[i]);

           map.put(arr[i] , vals+1);

 

       }

        int size = ans.size();

           int ans2 [][] = new int[size][2];

           int i1 = 0;

        for(int i[] : ans){

            ans2[i1][0]=i[0];

            ans2[i1][1]=i[1];

            i1++;

        }  

    Arrays.sort(ans2, (a, b) -> a[0] - b[0]);

       return ans2;

}

}

